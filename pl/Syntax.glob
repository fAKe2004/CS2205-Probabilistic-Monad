DIGEST 0acef47792e3db825f61c5d3374f16b2
FPL.Syntax
R15:32 Coq.Strings.String <> <> lib
R50:66 Coq.ZArith.ZArith <> <> lib
R84:102 Coq.micromega.Psatz <> <> lib
def 282:289 <> var_name
R300:305 Coq.Strings.String <> string ind
mod 355:370 <> Lang_SimpleWhile
ind 458:465 Lang_SimpleWhile expr_int
constr 481:486 Lang_SimpleWhile EConst
constr 509:512 Lang_SimpleWhile EVar
constr 542:545 Lang_SimpleWhile EAdd
constr 579:582 Lang_SimpleWhile ESub
constr 616:619 Lang_SimpleWhile EMul
R492:492 Coq.Numbers.BinNums <> Z ind
binder 489:489 <> n:3
R496:503 PL.Syntax <> expr_int:1 ind
R518:525 PL.Syntax <> var_name def
binder 515:515 <> x:4
R529:536 PL.Syntax <> expr_int:1 ind
R555:562 PL.Syntax <> expr_int:1 ind
binder 548:549 <> e1:5
binder 551:552 <> e2:6
R566:573 PL.Syntax <> expr_int:1 ind
R592:599 PL.Syntax <> expr_int:1 ind
binder 585:586 <> e1:7
binder 588:589 <> e2:8
R603:610 PL.Syntax <> expr_int:1 ind
R629:636 PL.Syntax <> expr_int:1 ind
binder 622:623 <> e1:9
binder 625:626 <> e2:10
R640:647 PL.Syntax <> expr_int:1 ind
ind 661:669 Lang_SimpleWhile expr_bool
constr 684:688 Lang_SimpleWhile ETrue
constr 705:710 Lang_SimpleWhile EFalse
constr 727:729 Lang_SimpleWhile ELt
constr 764:767 Lang_SimpleWhile EAnd
constr 803:806 Lang_SimpleWhile ENot
R691:699 PL.Syntax <> expr_bool:11 ind
R713:721 PL.Syntax <> expr_bool:11 ind
R739:746 PL.Syntax Lang_SimpleWhile expr_int ind
binder 732:733 <> e1:13
binder 735:736 <> e2:14
R750:758 PL.Syntax <> expr_bool:11 ind
R777:785 PL.Syntax <> expr_bool:11 ind
binder 770:771 <> e1:15
binder 773:774 <> e2:16
R789:797 PL.Syntax <> expr_bool:11 ind
R812:820 PL.Syntax <> expr_bool:11 ind
binder 809:809 <> e:17
R824:832 PL.Syntax <> expr_bool:11 ind
ind 846:848 Lang_SimpleWhile com
constr 864:868 Lang_SimpleWhile CSkip
constr 879:883 Lang_SimpleWhile CAsgn
constr 922:925 Lang_SimpleWhile CSeq
constr 949:951 Lang_SimpleWhile CIf
constr 990:995 Lang_SimpleWhile CWhile
R871:873 PL.Syntax <> com:18 ind
R889:896 PL.Syntax <> var_name def
binder 886:886 <> x:20
R903:910 PL.Syntax Lang_SimpleWhile expr_int ind
binder 900:900 <> e:21
R914:916 PL.Syntax <> com:18 ind
R935:937 PL.Syntax <> com:18 ind
binder 928:929 <> c1:22
binder 931:932 <> c2:23
R941:943 PL.Syntax <> com:18 ind
R957:965 PL.Syntax Lang_SimpleWhile expr_bool ind
binder 954:954 <> e:24
R976:978 PL.Syntax <> com:18 ind
binder 969:970 <> c1:25
binder 972:973 <> c2:26
R982:984 PL.Syntax <> com:18 ind
R1001:1009 PL.Syntax Lang_SimpleWhile expr_bool ind
binder 998:998 <> e:27
R1016:1018 PL.Syntax <> com:18 ind
binder 1013:1013 <> c:28
R1022:1024 PL.Syntax <> com:18 ind
def 1134:1138 Lang_SimpleWhile EVar'
R1147:1150 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1141:1146 Coq.Strings.String <> string ind
R1151:1158 PL.Syntax Lang_SimpleWhile expr_int ind
R1163:1166 PL.Syntax Lang_SimpleWhile EVar constr
R1169:1199 PL.Syntax Lang_SimpleWhile EConst constr
R1202:1237 PL.Syntax Lang_SimpleWhile EVar constr
R1240:1274 PL.Syntax Lang_SimpleWhile EVar' def
not 1286:1286 Lang_SimpleWhile :::'[['_x_']]'
not 1364:1364 Lang_SimpleWhile :prog_lang_entry::'('_x_')'
not 1455:1455 Lang_SimpleWhile :prog_lang_entry::x
not 1536:1536 Lang_SimpleWhile :prog_lang_entry::x_x
R1697:1700 PL.Syntax Lang_SimpleWhile EMul constr
not 1685:1685 Lang_SimpleWhile :prog_lang_entry::x_'*'_x
R1791:1794 PL.Syntax Lang_SimpleWhile EAdd constr
not 1779:1779 Lang_SimpleWhile :prog_lang_entry::x_'+'_x
R1885:1888 PL.Syntax Lang_SimpleWhile ESub constr
not 1873:1873 Lang_SimpleWhile :prog_lang_entry::x_'-'_x
R1979:1981 PL.Syntax Lang_SimpleWhile ELt constr
not 1967:1967 Lang_SimpleWhile :prog_lang_entry::x_'<'_x
R2071:2074 PL.Syntax Lang_SimpleWhile EAnd constr
not 2058:2058 Lang_SimpleWhile :prog_lang_entry::x_'&&'_x
R2163:2166 PL.Syntax Lang_SimpleWhile ENot constr
not 2153:2153 Lang_SimpleWhile :prog_lang_entry::'!'_x
R2235:2239 PL.Syntax Lang_SimpleWhile CAsgn constr
not 2223:2223 Lang_SimpleWhile :prog_lang_entry::x_'='_x
R2330:2333 PL.Syntax Lang_SimpleWhile CSeq constr
not 2316:2316 Lang_SimpleWhile :prog_lang_entry::x_';'_x
R2428:2432 PL.Syntax Lang_SimpleWhile CSkip constr
not 2415:2415 Lang_SimpleWhile :prog_lang_entry::'skip'
R2536:2538 PL.Syntax Lang_SimpleWhile CIf constr
not 2487:2487 Lang_SimpleWhile :prog_lang_entry::'if'_x_'then'_'{'_x_'}'_'else'_'{'_x_'}'
R2823:2828 PL.Syntax Lang_SimpleWhile CWhile constr
not 2791:2791 Lang_SimpleWhile :prog_lang_entry::'while'_x_'do'_'{'_x_'}'
R3012:3013 PL.Syntax Lang_SimpleWhile :::'[['_x_']]' not
R3021:3022 PL.Syntax Lang_SimpleWhile :::'[['_x_']]' not
R3015:3017 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'+'_x not
R3031:3032 PL.Syntax Lang_SimpleWhile :::'[['_x_']]' not
R3054:3055 PL.Syntax Lang_SimpleWhile :::'[['_x_']]' not
R3036:3038 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'*'_x not
R3039:3039 PL.Syntax Lang_SimpleWhile :prog_lang_entry::'('_x_')' not
R3053:3053 PL.Syntax Lang_SimpleWhile :prog_lang_entry::'('_x_')' not
R3049:3051 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'+'_x not
R3043:3045 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'+'_x not
R3064:3065 PL.Syntax Lang_SimpleWhile :::'[['_x_']]' not
R3079:3080 PL.Syntax Lang_SimpleWhile :::'[['_x_']]' not
R3073:3075 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'<'_x not
R3067:3069 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'+'_x not
R3089:3090 PL.Syntax Lang_SimpleWhile :::'[['_x_']]' not
R3109:3110 PL.Syntax Lang_SimpleWhile :::'[['_x_']]' not
R3098:3101 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'&&'_x not
R3094:3096 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'<'_x not
R3103:3105 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'<'_x not
R3119:3120 PL.Syntax Lang_SimpleWhile :::'[['_x_']]' not
R3134:3135 PL.Syntax Lang_SimpleWhile :::'[['_x_']]' not
R3124:3126 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'='_x not
R3130:3132 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'+'_x not
R3144:3145 PL.Syntax Lang_SimpleWhile :::'[['_x_']]' not
R3181:3182 PL.Syntax Lang_SimpleWhile :::'[['_x_']]' not
R3146:3151 PL.Syntax Lang_SimpleWhile :prog_lang_entry::'while'_x_'do'_'{'_x_'}' not
R3161:3166 PL.Syntax Lang_SimpleWhile :prog_lang_entry::'while'_x_'do'_'{'_x_'}' not
R3180:3180 PL.Syntax Lang_SimpleWhile :prog_lang_entry::'while'_x_'do'_'{'_x_'}' not
R3152:3152 PL.Syntax Lang_SimpleWhile :prog_lang_entry::'('_x_')' not
R3160:3160 PL.Syntax Lang_SimpleWhile :prog_lang_entry::'('_x_')' not
R3154:3156 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'<'_x not
R3170:3172 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'='_x not
R3176:3178 PL.Syntax Lang_SimpleWhile :prog_lang_entry::x_'-'_x not
R3191:3206 PL.Syntax Lang_SimpleWhile <> mod
ind 3589:3593 <> binop
constr 3609:3611 <> OOr
constr 3615:3618 <> OAnd
constr 3624:3626 <> OLt
constr 3630:3632 <> OLe
constr 3636:3638 <> OGt
constr 3642:3644 <> OGe
constr 3648:3650 <> OEq
constr 3654:3656 <> ONe
constr 3662:3666 <> OPlus
constr 3670:3675 <> OMinus
constr 3679:3682 <> OMul
constr 3686:3689 <> ODiv
constr 3693:3696 <> OMod
ind 3710:3713 <> unop
constr 3729:3732 <> ONot
constr 3736:3739 <> ONeg
mod 3750:3759 <> Lang_While
ind 3826:3829 Lang_While expr
constr 3845:3850 Lang_While EConst
constr 3869:3872 Lang_While EVar
constr 3898:3903 Lang_While EBinop
constr 3941:3945 Lang_While EUnop
R3856:3856 Coq.Numbers.BinNums <> Z ind
binder 3853:3853 <> n:35
R3860:3863 PL.Syntax <> expr:33 ind
R3878:3885 PL.Syntax <> var_name def
binder 3875:3875 <> x:36
R3889:3892 PL.Syntax <> expr:33 ind
R3910:3914 PL.Syntax <> binop ind
binder 3906:3907 <> op:37
R3925:3928 PL.Syntax <> expr:33 ind
binder 3918:3919 <> e1:38
binder 3921:3922 <> e2:39
R3932:3935 PL.Syntax <> expr:33 ind
R3952:3955 PL.Syntax <> unop ind
binder 3948:3949 <> op:40
R3962:3965 PL.Syntax <> expr:33 ind
binder 3959:3959 <> e:41
R3969:3972 PL.Syntax <> expr:33 ind
ind 4036:4038 Lang_While com
constr 4054:4058 Lang_While CSkip
constr 4069:4073 Lang_While CAsgn
constr 4108:4111 Lang_While CSeq
constr 4135:4137 Lang_While CIf
constr 4171:4176 Lang_While CWhile
R4061:4063 PL.Syntax <> com:42 ind
R4079:4086 PL.Syntax <> var_name def
binder 4076:4076 <> x:44
R4093:4096 PL.Syntax Lang_While expr ind
binder 4090:4090 <> e:45
R4100:4102 PL.Syntax <> com:42 ind
R4121:4123 PL.Syntax <> com:42 ind
binder 4114:4115 <> c1:46
binder 4117:4118 <> c2:47
R4127:4129 PL.Syntax <> com:42 ind
R4143:4146 PL.Syntax Lang_While expr ind
binder 4140:4140 <> e:48
R4157:4159 PL.Syntax <> com:42 ind
binder 4150:4151 <> c1:49
binder 4153:4154 <> c2:50
R4163:4165 PL.Syntax <> com:42 ind
R4182:4185 PL.Syntax Lang_While expr ind
binder 4179:4179 <> e:51
R4192:4194 PL.Syntax <> com:42 ind
binder 4189:4189 <> c:52
R4198:4200 PL.Syntax <> com:42 ind
R4209:4218 PL.Syntax Lang_While <> mod
mod 4274:4288 <> Lang_WhileDeref
ind 4382:4385 Lang_WhileDeref expr
constr 4401:4406 Lang_WhileDeref EConst
constr 4425:4428 Lang_WhileDeref EVar
constr 4454:4459 Lang_WhileDeref EBinop
constr 4497:4501 Lang_WhileDeref EUnop
constr 4534:4539 Lang_WhileDeref EDeref
R4412:4412 Coq.Numbers.BinNums <> Z ind
binder 4409:4409 <> n:55
R4416:4419 PL.Syntax <> expr:53 ind
R4434:4441 PL.Syntax <> var_name def
binder 4431:4431 <> x:56
R4445:4448 PL.Syntax <> expr:53 ind
R4466:4470 PL.Syntax <> binop ind
binder 4462:4463 <> op:57
R4481:4484 PL.Syntax <> expr:53 ind
binder 4474:4475 <> e1:58
binder 4477:4478 <> e2:59
R4488:4491 PL.Syntax <> expr:53 ind
R4508:4511 PL.Syntax <> unop ind
binder 4504:4505 <> op:60
R4518:4521 PL.Syntax <> expr:53 ind
binder 4515:4515 <> e:61
R4525:4528 PL.Syntax <> expr:53 ind
R4545:4548 PL.Syntax <> expr:53 ind
binder 4542:4542 <> e:62
R4552:4555 PL.Syntax <> expr:53 ind
ind 4631:4633 Lang_WhileDeref com
constr 4649:4653 Lang_WhileDeref CSkip
constr 4664:4671 Lang_WhileDeref CAsgnVar
constr 4706:4715 Lang_WhileDeref CAsgnDeref
constr 4740:4743 Lang_WhileDeref CSeq
constr 4767:4769 Lang_WhileDeref CIf
constr 4803:4808 Lang_WhileDeref CWhile
R4656:4658 PL.Syntax <> com:63 ind
R4677:4684 PL.Syntax <> var_name def
binder 4674:4674 <> x:65
R4691:4694 PL.Syntax Lang_WhileDeref expr ind
binder 4688:4688 <> e:66
R4698:4700 PL.Syntax <> com:63 ind
R4725:4728 PL.Syntax Lang_WhileDeref expr ind
binder 4718:4719 <> e1:67
binder 4721:4722 <> e2:68
R4732:4734 PL.Syntax <> com:63 ind
R4753:4755 PL.Syntax <> com:63 ind
binder 4746:4747 <> c1:69
binder 4749:4750 <> c2:70
R4759:4761 PL.Syntax <> com:63 ind
R4775:4778 PL.Syntax Lang_WhileDeref expr ind
binder 4772:4772 <> e:71
R4789:4791 PL.Syntax <> com:63 ind
binder 4782:4783 <> c1:72
binder 4785:4786 <> c2:73
R4795:4797 PL.Syntax <> com:63 ind
R4814:4817 PL.Syntax Lang_WhileDeref expr ind
binder 4811:4811 <> e:74
R4824:4826 PL.Syntax <> com:63 ind
binder 4821:4821 <> c:75
R4830:4832 PL.Syntax <> com:63 ind
R4840:4854 PL.Syntax Lang_WhileDeref <> mod
mod 4906:4916 <> Lang_WhileD
ind 5130:5133 Lang_WhileD expr
constr 5149:5154 Lang_WhileD EConst
constr 5173:5176 Lang_WhileD EVar
constr 5202:5207 Lang_WhileD EBinop
constr 5245:5249 Lang_WhileD EUnop
constr 5282:5287 Lang_WhileD EDeref
constr 5309:5315 Lang_WhileD EAddrOf
R5160:5160 Coq.Numbers.BinNums <> Z ind
binder 5157:5157 <> n:78
R5164:5167 PL.Syntax <> expr:76 ind
R5182:5189 PL.Syntax <> var_name def
binder 5179:5179 <> x:79
R5193:5196 PL.Syntax <> expr:76 ind
R5214:5218 PL.Syntax <> binop ind
binder 5210:5211 <> op:80
R5229:5232 PL.Syntax <> expr:76 ind
binder 5222:5223 <> e1:81
binder 5225:5226 <> e2:82
R5236:5239 PL.Syntax <> expr:76 ind
R5256:5259 PL.Syntax <> unop ind
binder 5252:5253 <> op:83
R5266:5269 PL.Syntax <> expr:76 ind
binder 5263:5263 <> e:84
R5273:5276 PL.Syntax <> expr:76 ind
R5293:5296 PL.Syntax <> expr:76 ind
binder 5290:5290 <> e:85
R5300:5303 PL.Syntax <> expr:76 ind
R5321:5324 PL.Syntax <> expr:76 ind
binder 5318:5318 <> e:86
R5328:5331 PL.Syntax <> expr:76 ind
ind 5386:5388 Lang_WhileD com
constr 5404:5408 Lang_WhileD CSkip
constr 5419:5426 Lang_WhileD CAsgnVar
constr 5461:5470 Lang_WhileD CAsgnDeref
constr 5495:5498 Lang_WhileD CSeq
constr 5522:5524 Lang_WhileD CIf
constr 5558:5563 Lang_WhileD CWhile
R5411:5413 PL.Syntax <> com:87 ind
R5432:5439 PL.Syntax <> var_name def
binder 5429:5429 <> x:89
R5446:5449 PL.Syntax Lang_WhileD expr ind
binder 5443:5443 <> e:90
R5453:5455 PL.Syntax <> com:87 ind
R5480:5483 PL.Syntax Lang_WhileD expr ind
binder 5473:5474 <> e1:91
binder 5476:5477 <> e2:92
R5487:5489 PL.Syntax <> com:87 ind
R5508:5510 PL.Syntax <> com:87 ind
binder 5501:5502 <> c1:93
binder 5504:5505 <> c2:94
R5514:5516 PL.Syntax <> com:87 ind
R5530:5533 PL.Syntax Lang_WhileD expr ind
binder 5527:5527 <> e:95
R5544:5546 PL.Syntax <> com:87 ind
binder 5537:5538 <> c1:96
binder 5540:5541 <> c2:97
R5550:5552 PL.Syntax <> com:87 ind
R5569:5572 PL.Syntax Lang_WhileD expr ind
binder 5566:5566 <> e:98
R5579:5581 PL.Syntax <> com:87 ind
binder 5576:5576 <> c:99
R5585:5587 PL.Syntax <> com:87 ind
R5595:5605 PL.Syntax Lang_WhileD <> mod
mod 5658:5669 <> Lang_WhileDC
ind 5785:5788 Lang_WhileDC expr
constr 5804:5809 Lang_WhileDC EConst
constr 5828:5831 Lang_WhileDC EVar
constr 5857:5862 Lang_WhileDC EBinop
constr 5900:5904 Lang_WhileDC EUnop
constr 5937:5942 Lang_WhileDC EDeref
constr 5964:5970 Lang_WhileDC EAddrOf
R5815:5815 Coq.Numbers.BinNums <> Z ind
binder 5812:5812 <> n:102
R5819:5822 PL.Syntax <> expr:100 ind
R5837:5844 PL.Syntax <> var_name def
binder 5834:5834 <> x:103
R5848:5851 PL.Syntax <> expr:100 ind
R5869:5873 PL.Syntax <> binop ind
binder 5865:5866 <> op:104
R5884:5887 PL.Syntax <> expr:100 ind
binder 5877:5878 <> e1:105
binder 5880:5881 <> e2:106
R5891:5894 PL.Syntax <> expr:100 ind
R5911:5914 PL.Syntax <> unop ind
binder 5907:5908 <> op:107
R5921:5924 PL.Syntax <> expr:100 ind
binder 5918:5918 <> e:108
R5928:5931 PL.Syntax <> expr:100 ind
R5948:5951 PL.Syntax <> expr:100 ind
binder 5945:5945 <> e:109
R5955:5958 PL.Syntax <> expr:100 ind
R5976:5979 PL.Syntax <> expr:100 ind
binder 5973:5973 <> e:110
R5983:5986 PL.Syntax <> expr:100 ind
ind 6000:6002 Lang_WhileDC com
constr 6018:6022 Lang_WhileDC CSkip
constr 6033:6040 Lang_WhileDC CAsgnVar
constr 6075:6084 Lang_WhileDC CAsgnDeref
constr 6109:6112 Lang_WhileDC CSeq
constr 6136:6138 Lang_WhileDC CIf
constr 6172:6177 Lang_WhileDC CWhile
constr 6207:6210 Lang_WhileDC CFor
constr 6261:6268 Lang_WhileDC CDoWhile
constr 6298:6306 Lang_WhileDC CContinue
constr 6317:6322 Lang_WhileDC CBreak
R6025:6027 PL.Syntax <> com:111 ind
R6046:6053 PL.Syntax <> var_name def
binder 6043:6043 <> x:113
R6060:6063 PL.Syntax Lang_WhileDC expr ind
binder 6057:6057 <> e:114
R6067:6069 PL.Syntax <> com:111 ind
R6094:6097 PL.Syntax Lang_WhileDC expr ind
binder 6087:6088 <> e1:115
binder 6090:6091 <> e2:116
R6101:6103 PL.Syntax <> com:111 ind
R6122:6124 PL.Syntax <> com:111 ind
binder 6115:6116 <> c1:117
binder 6118:6119 <> c2:118
R6128:6130 PL.Syntax <> com:111 ind
R6144:6147 PL.Syntax Lang_WhileDC expr ind
binder 6141:6141 <> e:119
R6158:6160 PL.Syntax <> com:111 ind
binder 6151:6152 <> c1:120
binder 6154:6155 <> c2:121
R6164:6166 PL.Syntax <> com:111 ind
R6183:6186 PL.Syntax Lang_WhileDC expr ind
binder 6180:6180 <> e:122
R6193:6195 PL.Syntax <> com:111 ind
binder 6190:6190 <> c:123
R6199:6201 PL.Syntax <> com:111 ind
R6217:6219 PL.Syntax <> com:111 ind
binder 6213:6214 <> c1:124
R6226:6229 PL.Syntax Lang_WhileDC expr ind
binder 6223:6223 <> e:125
R6237:6239 PL.Syntax <> com:111 ind
binder 6233:6234 <> c2:126
R6247:6249 PL.Syntax <> com:111 ind
binder 6243:6244 <> c3:127
R6253:6255 PL.Syntax <> com:111 ind
R6274:6276 PL.Syntax <> com:111 ind
binder 6271:6271 <> c:128
R6283:6286 PL.Syntax Lang_WhileDC expr ind
binder 6280:6280 <> e:129
R6290:6292 PL.Syntax <> com:111 ind
R6309:6311 PL.Syntax <> com:111 ind
R6325:6327 PL.Syntax <> com:111 ind
R6335:6346 PL.Syntax Lang_WhileDC <> mod
mod 6400:6411 <> Lang_WhileDL
R6421:6430 PL.Syntax Lang_While <> mod
ind 6503:6505 Lang_WhileDL com
constr 6521:6525 Lang_WhileDL CSkip
constr 6536:6543 Lang_WhileDL CAsgnVar
constr 6578:6587 Lang_WhileDL CAsgnDeref
constr 6612:6615 Lang_WhileDL CSeq
constr 6639:6641 Lang_WhileDL CIf
constr 6675:6680 Lang_WhileDL CWhile
constr 6710:6718 Lang_WhileDL CLocalVar
R6528:6530 PL.Syntax <> com:130 ind
R6549:6556 PL.Syntax <> var_name def
binder 6546:6546 <> x:132
R6563:6566 PL.Syntax Lang_While expr ind
binder 6560:6560 <> e:133
R6570:6572 PL.Syntax <> com:130 ind
R6597:6600 PL.Syntax Lang_While expr ind
binder 6590:6591 <> e1:134
binder 6593:6594 <> e2:135
R6604:6606 PL.Syntax <> com:130 ind
R6625:6627 PL.Syntax <> com:130 ind
binder 6618:6619 <> c1:136
binder 6621:6622 <> c2:137
R6631:6633 PL.Syntax <> com:130 ind
R6647:6650 PL.Syntax Lang_While expr ind
binder 6644:6644 <> e:138
R6661:6663 PL.Syntax <> com:130 ind
binder 6654:6655 <> c1:139
binder 6657:6658 <> c2:140
R6667:6669 PL.Syntax <> com:130 ind
R6686:6689 PL.Syntax Lang_While expr ind
binder 6683:6683 <> e:141
R6696:6698 PL.Syntax <> com:130 ind
binder 6693:6693 <> c:142
R6702:6704 PL.Syntax <> com:130 ind
R6724:6731 PL.Syntax <> var_name def
binder 6721:6721 <> x:143
R6738:6740 PL.Syntax <> com:130 ind
binder 6735:6735 <> c:144
R6744:6746 PL.Syntax <> com:130 ind
R6754:6765 PL.Syntax Lang_WhileDL <> mod
mod 6820:6833 <> Lang_WhileProc
R6843:6852 PL.Syntax Lang_While <> mod
def 6868:6876 Lang_WhileProc proc_name
R6887:6892 Coq.Strings.String <> string ind
ind 6906:6908 Lang_WhileProc com
constr 6924:6928 Lang_WhileProc CSkip
constr 6939:6946 Lang_WhileProc CAsgnVar
constr 6981:6990 Lang_WhileProc CAsgnDeref
constr 7015:7018 Lang_WhileProc CSeq
constr 7042:7044 Lang_WhileProc CIf
constr 7078:7083 Lang_WhileProc CWhile
constr 7113:7121 Lang_WhileProc CLocalVar
constr 7155:7163 Lang_WhileProc CProcCall
R6931:6933 PL.Syntax <> com:145 ind
R6952:6959 PL.Syntax <> var_name def
binder 6949:6949 <> x:147
R6966:6969 PL.Syntax Lang_While expr ind
binder 6963:6963 <> e:148
R6973:6975 PL.Syntax <> com:145 ind
R7000:7003 PL.Syntax Lang_While expr ind
binder 6993:6994 <> e1:149
binder 6996:6997 <> e2:150
R7007:7009 PL.Syntax <> com:145 ind
R7028:7030 PL.Syntax <> com:145 ind
binder 7021:7022 <> c1:151
binder 7024:7025 <> c2:152
R7034:7036 PL.Syntax <> com:145 ind
R7050:7053 PL.Syntax Lang_While expr ind
binder 7047:7047 <> e:153
R7064:7066 PL.Syntax <> com:145 ind
binder 7057:7058 <> c1:154
binder 7060:7061 <> c2:155
R7070:7072 PL.Syntax <> com:145 ind
R7089:7092 PL.Syntax Lang_While expr ind
binder 7086:7086 <> e:156
R7099:7101 PL.Syntax <> com:145 ind
binder 7096:7096 <> c:157
R7105:7107 PL.Syntax <> com:145 ind
R7127:7134 PL.Syntax <> var_name def
binder 7124:7124 <> x:158
R7141:7143 PL.Syntax <> com:145 ind
binder 7138:7138 <> c:159
R7147:7149 PL.Syntax <> com:145 ind
R7169:7177 PL.Syntax Lang_WhileProc proc_name def
binder 7166:7166 <> f:160
R7185:7188 Coq.Init.Datatypes <> list ind
R7190:7193 PL.Syntax Lang_While expr ind
binder 7181:7182 <> es:161
rec 7361:7364 Lang_WhileProc proc
proj 7379:7390 Lang_WhileProc name_of_proc
proj 7406:7417 Lang_WhileProc body_of_proc
proj 7427:7438 Lang_WhileProc args_of_proc
R7393:7401 PL.Syntax Lang_WhileProc proc_name def
R7420:7422 PL.Syntax Lang_WhileProc com ind
R7441:7444 Coq.Init.Datatypes <> list ind
R7446:7453 PL.Syntax <> var_name def
def 7471:7474 Lang_WhileProc prog
R7485:7488 Coq.Init.Datatypes <> list ind
R7490:7493 PL.Syntax Lang_WhileProc proc rec
R7502:7515 PL.Syntax Lang_WhileProc <> mod
