DIGEST ca6695e49b307a984835cb9c69d855ee
FPL.RecurProp
R15:32 Coq.Setoids.Setoid <> <> lib
R50:66 Coq.ZArith.ZArith <> <> lib
R84:102 Coq.micromega.Psatz <> <> lib
R120:135 PL.InductiveType <> <> lib
def 246:252 <> tree_le
R259:259 Coq.Numbers.BinNums <> Z ind
binder 255:256 <> ub:1
R266:269 PL.InductiveType <> tree ind
binder 263:263 <> t:2
R289:289 PL.RecurProp <> t:2 var
R300:303 PL.InductiveType <> Leaf constr
R308:311 Coq.Init.Logic <> True ind
R317:320 PL.InductiveType <> Node constr
R343:346 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R331:337 PL.RecurProp <> tree_le:3 def
R339:340 PL.RecurProp <> ub:1 var
R354:357 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R348:351 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R352:353 PL.RecurProp <> ub:1 var
R358:364 PL.RecurProp <> tree_le:3 def
R366:367 PL.RecurProp <> ub:1 var
def 388:394 <> tree_ge
R401:401 Coq.Numbers.BinNums <> Z ind
binder 397:398 <> lb:5
R408:411 PL.InductiveType <> tree ind
binder 405:405 <> t:6
R431:431 PL.RecurProp <> t:6 var
R442:445 PL.InductiveType <> Leaf constr
R450:453 Coq.Init.Logic <> True ind
R459:462 PL.InductiveType <> Node constr
R485:488 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R473:479 PL.RecurProp <> tree_ge:7 def
R481:482 PL.RecurProp <> lb:5 var
R496:499 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R490:493 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R494:495 PL.RecurProp <> lb:5 var
R500:506 PL.RecurProp <> tree_ge:7 def
R508:509 PL.RecurProp <> lb:5 var
R920:926 PL.RecurProp <> tree_le def
not 890:890 <> ::tree_scope:x_'⊆'_'['_x_','_'+'_'∞'_']'
R1019:1025 PL.RecurProp <> tree_ge def
not 989:989 <> ::tree_scope:x_'⊆'_'['_'-'_'∞'_','_x_']'
def 1261:1268 <> low2high
R1274:1277 PL.InductiveType <> tree ind
binder 1271:1271 <> t:9
R1297:1297 PL.RecurProp <> t:9 var
R1308:1311 PL.InductiveType <> Leaf constr
R1316:1319 Coq.Init.Logic <> True ind
R1325:1328 PL.InductiveType <> Node constr
R1349:1352 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1339:1346 PL.RecurProp <> low2high:10 def
R1369:1372 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1354:1366 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_'-'_'∞'_','_x_']' not
R1368:1368 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_'-'_'∞'_','_x_']' not
R1389:1392 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1374:1379 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_x_','_'+'_'∞'_']' not
R1381:1388 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_x_','_'+'_'∞'_']' not
R1393:1400 PL.RecurProp <> low2high:10 def
def 1421:1428 <> high2low
R1434:1437 PL.InductiveType <> tree ind
binder 1431:1431 <> t:12
R1457:1457 PL.RecurProp <> t:12 var
R1468:1471 PL.InductiveType <> Leaf constr
R1476:1479 Coq.Init.Logic <> True ind
R1485:1488 PL.InductiveType <> Node constr
R1509:1512 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1499:1506 PL.RecurProp <> high2low:13 def
R1529:1532 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1514:1519 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_x_','_'+'_'∞'_']' not
R1521:1528 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_x_','_'+'_'∞'_']' not
R1549:1552 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1534:1546 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_'-'_'∞'_','_x_']' not
R1548:1548 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_'-'_'∞'_','_x_']' not
R1553:1560 PL.RecurProp <> high2low:13 def
prf 1794:1809 <> reverse_low2high
binder 1819:1819 <> t:15
R1834:1839 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1824:1831 PL.RecurProp <> low2high def
R1833:1833 PL.RecurProp <> t:15 var
R1840:1847 PL.RecurProp <> high2low def
R1850:1861 PL.InductiveType <> tree_reverse def
R1863:1863 PL.RecurProp <> t:15 var
prf 2732:2741 <> reverse_le
binder 2753:2753 <> n:16
binder 2755:2755 <> t:17
R2778:2785 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2763:2775 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_'-'_'∞'_','_x_']' not
R2777:2777 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_'-'_'∞'_','_x_']' not
R2776:2776 PL.RecurProp <> n:16 var
R2762:2762 PL.RecurProp <> t:17 var
R2800:2812 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_'-'_'∞'_','_x_']' not
R2814:2814 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_'-'_'∞'_','_x_']' not
R2813:2813 PL.RecurProp <> n:16 var
R2786:2797 PL.InductiveType <> tree_reverse def
R2799:2799 PL.RecurProp <> t:17 var
prf 2967:2976 <> reverse_ge
binder 2988:2988 <> n:18
binder 2990:2990 <> t:19
R3013:3020 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2998:3003 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_x_','_'+'_'∞'_']' not
R3005:3012 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_x_','_'+'_'∞'_']' not
R3004:3004 PL.RecurProp <> n:18 var
R2997:2997 PL.RecurProp <> t:19 var
R3035:3040 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_x_','_'+'_'∞'_']' not
R3042:3049 PL.RecurProp <> ::tree_scope:x_'⊆'_'['_x_','_'+'_'∞'_']' not
R3041:3041 PL.RecurProp <> n:18 var
R3021:3032 PL.InductiveType <> tree_reverse def
R3034:3034 PL.RecurProp <> t:19 var
prf 3229:3244 <> reverse_low2high
binder 3254:3254 <> t:20
R3269:3274 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3259:3266 PL.RecurProp <> low2high def
R3268:3268 PL.RecurProp <> t:20 var
R3275:3282 PL.RecurProp <> high2low def
R3285:3296 PL.InductiveType <> tree_reverse def
R3298:3298 PL.RecurProp <> t:20 var
R3383:3392 PL.RecurProp <> reverse_le thm
R3383:3392 PL.RecurProp <> reverse_le thm
R3415:3424 PL.RecurProp <> reverse_ge thm
R3415:3424 PL.RecurProp <> reverse_ge thm
def 3553:3566 <> same_structure
R3576:3579 PL.InductiveType <> tree ind
binder 3569:3570 <> t1:21
binder 3572:3573 <> t2:22
R3603:3604 PL.RecurProp <> t2:22 var
R3599:3600 PL.RecurProp <> t1:21 var
R3615:3618 PL.InductiveType <> Leaf constr
R3621:3624 PL.InductiveType <> Leaf constr
R3635:3638 Coq.Init.Logic <> True ind
R3644:3647 PL.InductiveType <> Leaf constr
R3650:3653 PL.InductiveType <> Node constr
R3670:3674 Coq.Init.Logic <> False ind
R3680:3683 PL.InductiveType <> Node constr
R3692:3695 PL.InductiveType <> Leaf constr
R3706:3710 Coq.Init.Logic <> False ind
R3716:3719 PL.InductiveType <> Node constr
R3730:3733 PL.InductiveType <> Node constr
R3772:3775 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3752:3765 PL.RecurProp <> same_structure:23 def
R3776:3789 PL.RecurProp <> same_structure:23 def
prf 4165:4190 <> same_structure_same_height
binder 4200:4201 <> t1:26
binder 4203:4204 <> t2:27
R4229:4234 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4209:4222 PL.RecurProp <> same_structure def
R4224:4225 PL.RecurProp <> t1:26 var
R4227:4228 PL.RecurProp <> t2:27 var
R4249:4251 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4235:4245 PL.InductiveType <> tree_height def
R4247:4248 PL.RecurProp <> t1:26 var
R4252:4262 PL.InductiveType <> tree_height def
R4264:4265 PL.RecurProp <> t2:27 var
prf 5376:5401 <> same_structure_same_height
binder 5411:5412 <> t1:28
binder 5414:5415 <> t2:29
R5440:5445 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5420:5433 PL.RecurProp <> same_structure def
R5435:5436 PL.RecurProp <> t1:28 var
R5438:5439 PL.RecurProp <> t2:29 var
R5460:5462 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5446:5456 PL.InductiveType <> tree_height def
R5458:5459 PL.RecurProp <> t1:28 var
R5463:5473 PL.InductiveType <> tree_height def
R5475:5476 PL.RecurProp <> t2:29 var
prf 6061:6080 <> same_structure_trans
binder 6090:6091 <> t1:30
binder 6093:6094 <> t2:31
binder 6096:6097 <> t3:32
R6122:6127 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6102:6115 PL.RecurProp <> same_structure def
R6117:6118 PL.RecurProp <> t1:30 var
R6120:6121 PL.RecurProp <> t2:31 var
R6148:6153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6128:6141 PL.RecurProp <> same_structure def
R6143:6144 PL.RecurProp <> t2:31 var
R6146:6147 PL.RecurProp <> t3:32 var
R6154:6167 PL.RecurProp <> same_structure def
R6169:6170 PL.RecurProp <> t1:30 var
R6172:6173 PL.RecurProp <> t3:32 var
R6486:6499 PL.RecurProp <> same_structure def
R6553:6566 PL.RecurProp <> same_structure def
